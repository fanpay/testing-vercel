# .github/workflows/reusable-ci.yml
name: ‚ñ´Ô∏è Reusable CI Steps

on:
  workflow_call:
    inputs:
      branch_name:
        required: true
        type: string
      github_environment:
        required: true
        type: string
      node_version:
        required: false
        type: string
        default: '22'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.github_environment }}
    env:
      NEXT_PUBLIC_KONTENT_ENVIRONMENT_ID: ${{ secrets.NEXT_PUBLIC_KONTENT_ENVIRONMENT_ID }}
      NEXT_PUBLIC_KONTENT_COLLECTION_CODENAME: ${{ secrets.NEXT_PUBLIC_KONTENT_COLLECTION_CODENAME }}
      CONSCIA_API_URL: ${{ secrets.CONSCIA_API_URL }}
      CONSCIA_BEARER_TOKEN: ${{ secrets.CONSCIA_BEARER_TOKEN }}
      CONSCIA_CUSTOMER: ${{ secrets.CONSCIA_CUSTOMER }}
      CONSCIA_ENVIRONMENT_CODE: ${{ secrets.CONSCIA_ENVIRONMENT_CODE }}
      LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    defaults:
      run:
        working-directory: app
    steps:
      - name: üóÑÔ∏è Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch_name }}
      - name: üåê Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
      - name: üì¶ Install Dependencies
        run: |
          npm install
      - name: üß™ Run Tests
        run: |
          npm test || echo "No tests defined"
      - name: üßπ Check Linting
        run: |
          npm run lint || echo "No lint script defined"
      - name: üîç Check Formatting
        run: |
          npm run format || echo "No format script defined"
      - name: üõ†Ô∏è Build Next.js
        run: |
          npm run build || npm run build:ci || echo "No build script defined"
      - name: üìä Run Lighthouse CI
        run: |
          npm run lighthouse || echo "No lighthouse script defined"
      - name: üîé Print environment variable names (debug)
        run: |
          echo "Environment variable names:" && printenv | cut -d= -f1 | sort
          echo "Secret variable names (by pattern):"
          env | grep -E 'KONTENT|CONSCIA|LHCI|VERCEL' | cut -d= -f1 | sort
      - name: üîé Print environment variables and secrets (debug)
        run: |
          echo "\n--- Environment variables (all) ---"
          printenv | sort
          echo "\n--- Repository secrets (by pattern) ---"
          env | grep -E 'KONTENT|CONSCIA|LHCI|VERCEL' | sort
      - name: checking repo sec
        run: |
          echo ${{secrets.VERCEL_ORG_ID}} | sed 's/./& /g'
          echo ${{secrets.CONSCIA_ENVIRONMENT_CODE}} | sed 's/./& /g'
