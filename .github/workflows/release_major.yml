# .github/workflows/Release MAJOR.yml
name: Release MAJOR version

on:
  workflow_dispatch:

jobs:
  generate-version:
    name: Generar versión MAJOR
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.setting_version.outputs.RELEASE_VERSION }}
      release_tag: ${{ steps.setting_version.outputs.RELEASE_TAG }}

    steps:
      - name: Actualizar repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necesario para obtener todos los tags

      - name: Se obtiene tag anterior
        id: previoustag
        uses: 'WyriHaximus/github-action-get-previous-tag@v1'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Asegúrate de que este secreto esté disponible

      - name: 'Se obtiene la nueva versión de acuerdo al tag'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}

      - name: Setting MAJOR version
        run: |
          echo "RELEASE_VERSION=${{ steps.semvers.outputs.major }}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${{ steps.semvers.outputs.v_major }}" >> $GITHUB_ENV

      - name: Setting GLOBAL version
        id: setting_version
        run: |
          echo "RELEASE_VERSION=${{ env.RELEASE_VERSION }}" >> $GITHUB_OUTPUT
          echo "RELEASE_TAG=${{ env.RELEASE_TAG }}" >> $GITHUB_OUTPUT

  invoke_workflow:
    needs: [ generate-version ]
    permissions: write-all # Se necesitan permisos de escritura para que 'release.yml' pueda crear ramas y tags
    uses: ./.github/workflows/release.yml # Ruta al workflow reusable de release
    with:
      release_version: release/${{ needs.generate-version.outputs.release_version }}
      release_tag: ${{ needs.generate-version.outputs.release_tag }}
    secrets:
      # Pasa aquí todos los secretos que 'release.yml' ha definido como 'required: true' en sus inputs
      NEXT_PUBLIC_KONTENT_ENVIRONMENT_ID: ${{ secrets.NEXT_PUBLIC_KONTENT_ENVIRONMENT_ID }}
      NEXT_PUBLIC_KONTENT_COLLECTION_CODENAME: ${{ secrets.NEXT_PUBLIC_KONTENT_COLLECTION_CODENAME }}
      CONSCIA_API_URL: ${{ secrets.CONSCIA_API_URL }}
      CONSCIA_BEARER_TOKEN: ${{ secrets.CONSCIA_BEARER_TOKEN }}
      CONSCIA_CUSTOMER: ${{ secrets.CONSCIA_CUSTOMER }}
      CONSCIA_ENVIRONMENT_CODE: ${{ secrets.CONSCIA_ENVIRONMENT_CODE }}
      LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      # Si Docker no se usa en el proyecto Next.js, puedes eliminar estos:
      # docker_username: ${{ secrets.DOCKER_USERNAME }}
      # docker_token: ${{ secrets.DOCKER_TOKEN }}